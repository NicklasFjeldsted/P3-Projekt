/* You can add global styles to this file, and also import other style files */
*
{
  margin: 0;
  padding: 0;
  font-family: Verdana, Geneva, Tahoma, sans-serif;
}

/* Makes the background green. */
.bg-green
{
  background-color: green;
}

/* Makes the body equal to the device's screen width and height. */
body
{
  height: 100vh;
  width: 100vw;
  box-sizing: border-box;
  overflow: hidden;
}

/* A wrapper for everything on a page. */
.container
{
  display: flex;
  align-items: stretch;
  flex-direction: column;
  width: 100%;
  height: 100%
}

/* Creates a row along the entire screen. */
.row
{
  position: relative;
  border-bottom: 2px solid lightgray;
  height: 50px;
  display: flex;
  width: 100%;
}

.test-row
{
  position: relative;
  display: flex;
  
}

.fit
{
  height: fit-content;
  padding: 10px 0px;
}

/* Create a row in the center of the screen. */
.center-row
{
  display: flex;
  width: 50%;
  margin: 0 auto;
}

/* A row that has the size of its parent's remaining height. */
.fill-row
{
  position: relative;
  height: 100%;
  display: flex;
}

/* Creates a column that scales with the number of other columns in its row. */
.column
{
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1;
  height: 100%;
  position: relative;
  text-align: center;
  border: 2px transparent;
}

/* Makes the content of the element start from the center. */
.center
{
  justify-content: center;
}

.self-left
{
  align-self: flex-start;
}

.self-right
{
  align-self: flex-end;
}

/* Makes the content of the element start from the right. */
.right
{
  justify-content: end;
}

/* Makes the content of the element start from the left. */
.left
{
  justify-content: start;
}

/* Makes the content of the element flow down instead of sideways. */
.flow-down
{
  flex-direction: column;
  justify-content: start;
}

/* Makes the content of the element flow up instead of sideways. */
.flow-up
{
  flex-direction: column;
  justify-content: end;
}


/* Centers an element vertically within its parent. */
.v-center
{
  position: relative!important;
  top: 50%!important;
  transform: translateY(-50%)!important;
}

/* Centers an element horizontally within its parent. */
.h-center
{
  left: 0;
  right: 0;
  margin: 0 auto;
  width: 100%;
  text-align: center;
}

/* Defines the behaviour of all a elements. */
a
{
  color: black;
  text-align: center;
  text-decoration: none;
}

/* Standard button style. */
.btn
{
  color: black;
  height: 100%;
  max-width: 310px;
  max-height: 40px;
  border: none;
  border-radius: 17px;
  font-size: 16px;
  font-style: bold;
  margin: 0 .5em;
  padding: .5em 1em;
  cursor: pointer;
}

.btn:hover
{
  box-shadow: 0px 0px 10px green;
}

.btn-secondary
{
  border: solid black 2px;
  background-color: transparent;
}

.btn-solid
{
  background-color: black;
}

.btn-solid a
{
  color: white;
}

/* Defines the behaviour of a form. */
.form-control
{
  width: 75%;
  height: 75%;
  max-width: 400px;
  max-height: 800px;
  overflow: hidden;
  border-radius: 5px;
  border: 3px solid black;
  text-align: center;
  background-color: lightgrey;
}

/* Defines the behaviour of form inputs. */
.form-input
{
  width: 90%;
  height: 30px!important;
  max-width: 300px;
  border: none;
  border-radius: 3px;
  box-shadow: black 0px 0px 3px;
  padding: 2px 8px;
  margin-bottom: 10px;
}

/* Defines the behaviour of form submits. */
.form-submit
{
  width: 90%;
  border: none;
  border-radius: 17px;
  font-size: large;
  font-size: bold;
  cursor: pointer;
}

/* Define a form header. */
.form-header
{
  position: relative;
  border-bottom: 2px solid black;
  height: 60px;
  display: flex;
  width: 100%;
  justify-content: center;
  margin-bottom: 40px;
}

/* Defines the behaviour of all form's a elements. */
form a
{
  margin-bottom: 10px;
}
